import tkinter as tk
from tkinter import messagebox
from enum import Enum

class VisitorCategory(Enum):
    ADULT = "Adult"
    CHILD = "Child"
    STUDENT_TEACHER = "Student/Teacher"
    SENIOR = "Senior"
    GROUP = "Group"

class VisitPlace:
    def __init__(self, location_name, description):
        self.location_name = location_name
        self.description = description

class PermanentGallery(VisitPlace):
    pass

class ExhibitionHall(VisitPlace):
    def __init__(self, location_name, description, start_date, end_date):
        super().__init__(location_name, description)
        self.start_date = start_date
        self.end_date = end_date
        self.exhibitions = []

class Exhibition:
    def __init__(self, name):
        self.name = name
        self.artworks = []

    def add_artwork(self, artwork):
        self.artworks.append(artwork)

class Artwork:
    def __init__(self, title, artist, creation_date, historical_significance):
        self.title = title
        self.artist = artist
        self.creation_date = creation_date
        self.historical_significance = historical_significance

class Visitor:
    def __init__(self, name, age, national_id, category):
        self.name = name
        self.age = age
        self.national_id = national_id
        self.category = category
        self.tickets = []

    def print_receipt(self):
        if self.category == VisitorCategory.CHILD or self.category == VisitorCategory.SENIOR:
            ticket_price = 0
        elif self.category == VisitorCategory.STUDENT_TEACHER and self.national_id.startswith("UAE") and (
                self.national_id.endswith("T") or self.national_id.endswith("S")
        ):
            ticket_price = 0
        else:
            ticket_price = 63

        if self.category == VisitorCategory.GROUP:
            ticket_price *= 0.5

        total_price = ticket_price * (1 + Ticket.VAT_RATE)
        print(f"Name: {self.name}, Age: {self.age}, National ID: {self.national_id}, Category: {self.category.value}, Total Price: {total_price:.2f} AED")

class Ticket:
    VAT_RATE = 0.05

class VisitorManagementGUI:
    def __init__(self, root):
        self.root = root
        self.root.title('Visitor Management System')
        self.visitors = []

        self.name_label = tk.Label(self.root, text="Name:")
        self.name_label.grid(row=0, column=0, padx=10, pady=10)
        self.name_entry = tk.Entry(self.root)
        self.name_entry.grid(row=0, column=1, padx=10, pady=10)

        self.id_label = tk.Label(self.root, text="National ID:")
        self.id_label.grid(row=1, column=0, padx=10, pady=10)
        self.id_entry = tk.Entry(self.root)
        self.id_entry.grid(row=1, column=1, padx=10, pady=10)

        self.age_label = tk.Label(self.root, text="Age:")
        self.age_label.grid(row=2, column=0, padx=10, pady=10)
        self.age_entry = tk.Entry(self.root)
        self.age_entry.grid(row=2, column=1, padx=10, pady=10)

        self.category_label = tk.Label(self.root, text="Category:")
        self.category_label.grid(row=3, column=0, padx=10, pady=10)
        self.category_var = tk.StringVar(self.root)
        self.category_var.set(VisitorCategory.ADULT.value)  # Default value
        self.category_dropdown = tk.OptionMenu(self.root, self.category_var, *VisitorCategory.__members__.values())
        self.category_dropdown.grid(row=3, column=1, padx=10, pady=10)

        self.submit_button = tk.Button(self.root, text="Submit", command=self.submit_visitor)
        self.submit_button.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

    def submit_visitor(self):
        name = self.name_entry.get()
        age = int(self.age_entry.get())
        national_id = self.id_entry.get()
        category = VisitorCategory(self.category_var.get())
        visitor = Visitor(name, age, national_id, category)
        self.visitors.append(visitor)

        if len(self.visitors) == 3:
            self.display_visitor_receipts()

    def display_visitor_receipts(self):
        for visitor in self.visitors:
            visitor.print_receipt()

